{"version":3,"sources":["webpack:///./src/App.jsx","webpack:///./src/IssueList.jsx","webpack:///./src/IssueAdd.jsx","webpack:///./src/IssueFilter.jsx","webpack:///./src/IssueEdit.jsx"],"names":["contentNode","document","getElementById","NoMatch","RoutedApp","hashHistory","IssueList","IssueEdit","ReactDOM","render","module","hot","accept","IssueRow","props","issue","_id","substr","status","owner","created","toDateString","effort","completionDate","title","propTypes","React","PropTypes","object","isRequired","IssueTable","issueRows","issues","map","array","state","createIssue","bind","loadData","fetch","location","search","then","response","ok","json","data","records","forEach","Date","setState","alert","error","message","catch","err","newIssue","method","headers","body","JSON","stringify","updatedIssue","newIssues","concat","Component","IssueAdd","handleSubmit","e","preventDefault","form","forms","issueAdd","value","IssueFilter","Separator","pathname","query","params","id"],"mappings":"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","file":"app.bundle.js","sourcesContent":["import 'babel-polyfill';\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Router, Route, Redirect, hashHistory } from 'react-router';\n\nimport IssueList from './IssueList.jsx';\nimport IssueEdit from './IssueEdit.jsx';\n\nconst contentNode = document.getElementById('contents');\nconst NoMatch = () => <p>Page Not Found</p>;\n\n// kind of history to use, hashHistory from react-router\nconst RoutedApp = () => (\n  <Router history={hashHistory} >\n    <Redirect from=\"/\" to=\"issues\" />\n    <Route path=\"/issues\" component={IssueList} />\n    <Route path=\"/issues/:id\" component={IssueEdit} />\n    <Route path=\"*\" component={NoMatch} />\n  </Router>\n);\n\n// RoutedApp used now instead of IssueList component\nReactDOM.render(<RoutedApp />, contentNode);    // Render the component inside the content Node\n\nif (module.hot) {\n  module.hot.accept();\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/App.jsx","import React from 'react';\n// fetch is imported into the global namespace\n// because it is expected to be a substitute for window.fetch() //\n// which should be available in the browser in any case.\nimport 'whatwg-fetch';\nimport { Link } from 'react-router';\n\nimport IssueAdd from './IssueAdd.jsx';\nimport IssueFilter from './IssueFilter.jsx';\n\n// ES2015 arrow function style with only the return value as an expression.\n// No curly braces, and no statements, jsut a JSX expression.\nconst IssueRow = (props) => (\n  <tr>\n    <td><Link to={`/issues/${props.issue._id}`}>\n      {props.issue._id.substr(-4)}\n    </Link></td>\n    <td>{props.issue.status}</td>\n    <td>{props.issue.owner}</td>\n    <td>{props.issue.created.toDateString()}</td>\n    <td>{props.issue.effort}</td>\n    <td>{props.issue.completionDate ? props.issue.completionDate.toDateString() : ''}</td>\n    <td>{props.issue.title}</td>\n  </tr>\n);\n\nIssueRow.propTypes = {\n  issue: React.PropTypes.object.isRequired,\n};\n\n// less concise but needed as the function is not a single expression.\n// Initialized a variable called issueRows\n// which means we need a full-fledged function with a return value.\nfunction IssueTable(props) {\n  const issueRows = props.issues.map(issue => <IssueRow key={issue._id} issue={issue} />);\n  return (\n    <table className=\"bordered-table\">\n      <thead>\n        <tr>\n          <th>Id</th>\n          <th>Status</th>\n          <th>Owner</th>\n          <th>Created</th>\n          <th>Effort</th>\n          <th>Completion Date</th>\n          <th>Title</th>\n        </tr>\n      </thead>\n      <tbody>{issueRows}</tbody>\n    </table>\n  );\n}\n\nIssueTable.propTypes = {\n  issues: React.PropTypes.array.isRequired,\n};\n\nexport default class IssueList extends React.Component {\n  constructor() {\n    super();\n    this.state = { issues: [] };\n\n    this.createIssue = this.createIssue.bind(this);\n    // must bind this method in the constructor since\n    // it's not being called from another component\n    // (so that the this variable during the call will be the calling component.)\n  }\n\n  componentDidMount() {\n    this.loadData();\n  }\n\n  loadData() {\n    fetch(`/api/issues${this.props.location.search}`).then(response => {\n      if (response.ok) {\n        response.json().then(data => {\n          data.records.forEach(issue => {\n            issue.created = new Date(issue.created);\n            if (issue.completionDate) {\n              issue.completionDate = new Date(issue.completionDate);\n            }\n          });\n          this.setState({ issues: data.records });\n        });\n      } else {\n        response.json().then(error => {\n          alert(`Failed to fetch issues ${error.message}`);\n        });\n      }\n    }).catch(err => {\n      alert(`Error in fetching data from server: ${err}`);\n    });\n  }\n\n  createIssue(newIssue) {\n    fetch('/api/issues', {\n      method: 'POST',\n      headers: { 'Content-Type': 'application/json' },\n      body: JSON.stringify(newIssue),\n    }).then(response => {\n      if (response.ok) {\n        response.json().then(updatedIssue => {\n          updatedIssue.created = new Date(updatedIssue.created);\n          if (updatedIssue.completionDate) {\n            updatedIssue.completionDate = new Date(updatedIssue.completionDate);\n          }\n          // state is immutable so it cannot be modified.\n          // instead, concat() function of Array is used to create a copy of the original array\n          const newIssues = this.state.issues.concat(updatedIssue);\n          this.setState({ issues: newIssues });\n        });\n      } else {\n        response.json().then(error => {\n          alert(`Failed to add issue: ${error.message}`);\n        });\n      }\n    }).catch(err => {\n      alert(`Error in sending data to server: ${err.message}`);\n    });\n  }\n\n  render() {\n    return (\n      <div>\n        <h1>Issue Tracker</h1>\n        <IssueFilter />\n        <hr />\n        <IssueTable issues={this.state.issues} />\n        <hr />\n        <IssueAdd createIssue={this.createIssue} />\n      </div>\n    );\n  }\n}\n\nIssueList.propTypes = {\n  location: React.PropTypes.object.isRequired,\n};\n\n\n\n// WEBPACK FOOTER //\n// ./src/IssueList.jsx","import React from 'react';\n\nexport default class IssueAdd extends React.Component {\n  constructor() {\n    super();\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n  handleSubmit(e) {\n    e.preventDefault();\n    // default behavior of the form submits the form.\n    // This does a GET to the form's action URL, which is the same as the current URL\n    // Thus, the effect is to refresh the page even before the event is handled.\n    const form = document.forms.issueAdd;\n    // eslint-disable-next-line react/prop-types\n    this.props.createIssue({\n      owner: form.owner.value,\n      title: form.title.value,\n      status: 'New',\n      created: new Date(),\n    });\n        // clear the form for the next input\n    form.owner.value = ''; form.title.value = '';\n  }\n\n  render() {\n    return (\n    // onSubmit allows the user to press Enter to add a new issue (compared to onClick)\n      <div>\n        <form name=\"issueAdd\" onSubmit={this.handleSubmit}>\n          <input type=\"text\" name=\"owner\" placeholder=\"Owner\" />\n          <input type=\"text\" name=\"title\" placeholder=\"Title\" />\n          <button>Add</button>\n        </form>\n      </div>\n    );\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/IssueAdd.jsx","import React from 'react';\nimport { Link } from 'react-router';\n\nexport default class IssueFilter extends React.Component\n{ // eslint-disable-line\n  render() {\n    const Separator = () => <span> | </span>;\n    return (\n      <div>\n        <Link to=\"/issues\">All Issues</Link>\n        <Separator />\n        <Link to={{ pathname: '/issues', query: { status: 'Open' } }}>\n        Open Issues\n        </Link>\n        <Separator />\n        <Link to=\"/issues?status=Assigned\">Assigned Issues</Link>\n      </div>\n    );\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/IssueFilter.jsx","import React from 'react';\nimport { Link } from 'react-router';\n\nexport default class IssueEdit extends React.Component\n{ // eslint-disable-line\n  render() {\n    return (\n      <div>\n        <p>This is a placeholder for editing issue {this.props.params.id}.</p>\n        <Link to=\"/issues\">Back to issue list</Link>\n      </div>\n    );\n  }\n}\n\nIssueEdit.propTypes = {\n  params: React.PropTypes.object.isRequired,\n};\n\n\n\n// WEBPACK FOOTER //\n// ./src/IssueEdit.jsx"],"sourceRoot":""}